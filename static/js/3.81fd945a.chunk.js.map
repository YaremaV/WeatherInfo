{"version":3,"sources":["API/weather-api.js","component/Searchbar/Searchbar.js","component/WeatherContainer/WeatherContainer.js","component/WeatherList/WeatherList.js","views/Home/Home.js"],"names":["BASE_URL","KEY","fetchWithErrorHandling","a","url","fetch","response","ok","json","Promise","reject","Error","fetchSearch","cityName","fetchDetails","id","Searchbar","onSubmit","location","useLocation","useState","image","setImage","useEffect","queryValue","URLSearchParams","search","get","className","s","SearchForm","evt","preventDefault","trim","toast","error","position","theme","SearchFormInput","type","autoComplete","autoFocus","placeholder","value","onChange","EventTarget","currentTarget","toLowerCase","SearchFormButton","SearchFormButtonLabel","propType","PropTypes","string","func","WeatherContainer","weatherContainer","onClick","icon","useRouteMatch","weather","map","descr","description","to","alt","src","Math","round","main","temp","name","WeatherList","onDeleteContacts","list","setList","console","log","SearchCountry","countries","setCountries","searchCountries","setSearchCountries","setError","moviesApi","then","res","catch","message","newCard","normValue","some","alert","contactId","filter"],"mappings":"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","file":"static/js/3.81fd945a.chunk.js","sourcesContent":["const BASE_URL = \"HTTPS://api.openweathermap.org/data/2.5/\";\r\nconst KEY = \"2d20223674e609e0aa7b3ad29d181f8b\";\r\n\r\nasync function fetchWithErrorHandling(url = \"\") {\r\n  const response = await fetch(url);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(\"Not found\"));\r\n}\r\n\r\nexport function fetchSearch(cityName) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}weather?q=${cityName}&appid=${KEY}`\r\n  );\r\n}\r\n\r\nexport function fetchDetails(id) {\r\n  return fetchWithErrorHandling(`${BASE_URL}weather?id=${id}&appid=${KEY}`);\r\n}\r\n\r\nexport function fetchFiveDays(id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}forecast/daily?id=${id}&appid=${KEY}`\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Searchbar.module.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const location = useLocation();\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const queryValue = new URLSearchParams(location.search).get(\"image\");\r\n\r\n    if (queryValue === null) {\r\n      return;\r\n    }\r\n\r\n    setImage(queryValue);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleImageChange = (EventTarget) => {\r\n    setImage(EventTarget.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    if (image.trim() === \"\") {\r\n      toast.error(\"Please Enter countries to get weather!\", {\r\n        position: \"top-left\",\r\n        theme: \"colored\",\r\n      });\r\n      return;\r\n    }\r\n    onSubmit(image);\r\n    setImage(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n        <input\r\n          className={s.SearchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Get weather in your countries\"\r\n          value={image}\r\n          onChange={handleImageChange}\r\n        />\r\n        <button type=\"submit\" className={s.SearchFormButton}>\r\n          <span className={s.SearchFormButtonLabel}>Search</span>\r\n        </button>\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propType = {\r\n  value: PropTypes.string,\r\n  onSubmit: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router\";\r\nimport \"./weather.css\";\r\n\r\nexport default function WeatherContainer({ weatherContainer, onClick }) {\r\n  const { url } = useRouteMatch();\r\n  const icon = weatherContainer?.weather?.map((value) => value.icon);\r\n  const descr = weatherContainer?.weather?.map((value) => value.description);\r\n  return (\r\n    <main className=\"container\">\r\n      <ul className=\"row\">\r\n        <li key={weatherContainer.id} className=\"container-medium main\">\r\n          <Link to={`/Information/${weatherContainer.id}`}>\r\n            <img\r\n              alt={\"Weather Condition and City\"}\r\n              src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n            />\r\n\r\n            <h1>{Math.round(weatherContainer?.main?.temp - 273.15)} &#176;C</h1>\r\n            <h2>{weatherContainer.name} </h2>\r\n            <p>{descr}</p>\r\n          </Link>\r\n          <div className=\"d-grid gap-2 d-md-block\">\r\n            <button\r\n              onClick={() => onClick(weatherContainer)}\r\n              className=\"btn btn-primary\"\r\n              type=\"button\"\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </main>\r\n\r\n    /* <ul>\r\n        <Link to={`/${url}/${id}`}>\r\n          <li key={id}> */\r\n    /* <h2>{sys.country}</h2> */\r\n    /* <p> {city}</p> */\r\n    /* <p> {Date(dt).toString()}</p> */\r\n\r\n    /* <p>\r\n              Temperature: {Math.round(temp - 273.15)}\r\n              &#176;C */\r\n    /* <span>\r\n        min: {Math.round(searchCountries?.main?.temp_min - 273.15)}\r\n        &#176;C\r\n      </span>\r\n      <span>\r\n        max: {Math.round(searchCountries?.main?.temp_max - 273.15)}\r\n        &#176;C\r\n      </span> */\r\n    /* </p>\r\n            <p>Влажность:{humidity}%</p>\r\n            <p>Давление: {pressure} мм рт. ст.</p>\r\n            <div>\r\n              <button type=\"button\">Add </button> */\r\n    /* <button type=\"button\" onClick={removeCard}> */\r\n    /* Delete\r\n      </button> */\r\n    /* </div> */\r\n    /* </li> */\r\n    /* //     </Link> */\r\n    /* //   </ul> */\r\n    /* // </main> */\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport s from \"./WeatherList.module.css\";\r\n\r\nexport default function WeatherList({ weather, onDeleteContacts }) {\r\n  const [list, setList] = useState([]);\r\n  const icon = weather?.weather?.map((value) => value.icon);\r\n  const descr = weather?.weather?.map((value) => value.description);\r\n\r\n  useEffect(() => {\r\n    setList(weather);\r\n  }, [list, weather]);\r\n  return (\r\n    <ul className=\"contacts\">\r\n      {console.log(list)}\r\n\r\n      {list?.map((value) => {\r\n        <li key={weather.id}>\r\n          <img\r\n            alt={\"Weather Condition and City\"}\r\n            src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n          />\r\n          <h1>{Math.round(weather?.main?.temp - 273.15)} &#176;C</h1>\r\n          <h2>{weather.name} </h2>\r\n          <p>{descr}</p>\r\n          <button\r\n            button\r\n            type=\"button\"\r\n            className=\"TodoList__btn\"\r\n            onClick={() => onDeleteContacts(weather.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>;\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router\";\r\nimport * as moviesApi from \"../../API/weather-api\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { connect } from \"react-redux\";\r\nimport * as action from \"../../redux/action\";\r\nimport SearchBar from \"../../component/Searchbar/Searchbar\";\r\nimport WeatherContainer from \"../../component/WeatherContainer/WeatherContainer\";\r\nimport WeatherList from \"../../component/WeatherList/WeatherList\";\r\n\r\nexport default function SearchCountry() {\r\n  const { url } = useRouteMatch();\r\n  const [countries, setCountries] = useState(\"\");\r\n  const [searchCountries, setSearchCountries] = useState([]);\r\n  const [list, setList] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (countries === \"\") {\r\n      return;\r\n    }\r\n\r\n    moviesApi\r\n      .fetchSearch(countries)\r\n      .then((res) => setSearchCountries(res))\r\n      .catch((error) => {\r\n        setError(error);\r\n      });\r\n  }, [countries]);\r\n\r\n  const handleSubmit = (value) => {\r\n    setCountries(value);\r\n  };\r\n\r\n  const removeCard = (contactId) => {\r\n    setList((list) => list.filter((value) => value.id !== contactId));\r\n  };\r\n\r\n  const addCard = (newCard) => {\r\n    console.log(\"click\");\r\n    const normValue = newCard.name?.toLowerCase();\r\n    // newCard.id = uuidv4();\r\n\r\n    searchCountries.some(({ name }) => name?.toLowerCase() === normValue)\r\n      ? alert(`${newCard.name} is already in contacts`)\r\n      : setSearchCountries({ newCard, ...searchCountries });\r\n  };\r\n\r\n  // const onUpdate = () => {\r\n  //   moviesApi\r\n  //     .fetchSearch(countries)\r\n  //     .then((res) => setSearchCountries(res))\r\n  //     .catch((error) => {\r\n  //       setError(error);\r\n  //     });\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <SearchBar onSubmit={handleSubmit} />\r\n      {error && <p>Whoops, something went wrong: {error.message}</p>}\r\n      {typeof searchCountries.main != \"undefined\" ? (\r\n        <WeatherContainer\r\n          weatherContainer={searchCountries}\r\n          onClick={addCard}\r\n        />\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n\r\n      {typeof list.main != \"undefined\" ? (\r\n        <WeatherList weather={list} onClick={removeCard} />\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = (state, ownProps) => {\r\n//   return {\r\n//     searchCountries: state.searchCountries,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     createCard: (searchCountries) =>\r\n//       dispatch(action.createCard(searchCountries)),\r\n//     deleteCard: (index) => dispatch(action.deleteCard(index)),\r\n//   };\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(SearchCountry);\r\n"],"sourceRoot":""}