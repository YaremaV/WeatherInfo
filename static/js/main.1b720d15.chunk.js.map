{"version":3,"sources":["API/weather-api.js","component/Container/container.module.css","component/Navigation/Navigation.js","component/AppBar/AppBar.js","component/Container/Container.js","views/Information/Information.js","App.js","index.js"],"names":["BASE_URL","KEY","fetchWithErrorHandling","a","url","fetch","response","ok","json","Promise","reject","Error","fetchSearch","cityName","fetchDetails","id","module","exports","Navigation","className","s","navigation","to","exact","navLink","activeClassName","active","AppBar","Container","children","styles","container","Information","useState","weather","setWeather","infoId","useRouteMatch","useParams","data","Date","useEffect","moviesApi","then","name","alt","src","map","value","icon","main","description","toDateString","dt","Math","round","temp","feels_like","temp_min","temp_max","humidity","pressure","wind","speed","SearchCountry","lazy","App","fallback","type","color","height","width","timeout","path","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b720d15.chunk.js","sourcesContent":["const BASE_URL = \"HTTPS://api.openweathermap.org/data/2.5/weather?\";\nconst KEY = \"2d20223674e609e0aa7b3ad29d181f8b\";\n\nasync function fetchWithErrorHandling(url = \"\") {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(\"Not found\"));\n}\n\nexport function fetchSearch(cityName) {\n  return fetchWithErrorHandling(`${BASE_URL}q=${cityName}&appid=${KEY}`);\n}\n\nexport function fetchDetails(id) {\n  return fetchWithErrorHandling(`${BASE_URL}id=${id}&appid=${KEY}`);\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__187eG\"};","import { NavLink } from \"react-router-dom\";\nimport s from \"./navigation.module.css\";\n\nconst Navigation = () => {\n  return (\n    <nav className={s.navigation}>\n      <NavLink\n        to=\"/get_weather\"\n        exact\n        className={s.navLink}\n        activeClassName={s.active}\n      >\n        Home\n      </NavLink>\n      <NavLink\n        to=\"/Information\"\n        className={s.navLink}\n        activeClassName={s.active}\n      >\n        Information\n      </NavLink>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport Navigation from \"../Navigation/Navigation\";\n\nexport default function AppBar() {\n  return <Navigation />;\n}\n","import styles from \"./container.module.css\";\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n","import { useState, useEffect } from \"react\";\nimport {\n  useParams,\n  Route,\n  useRouteMatch,\n  useHistory,\n  useLocation,\n} from \"react-router\";\nimport { NavLink } from \"react-router-dom\";\nimport { lazy, Suspense } from \"react\";\nimport * as moviesApi from \"../../API/weather-api\";\n\nexport default function Information() {\n  const [weather, setWeather] = useState([]);\n  const { url } = useRouteMatch();\n  const { infoId } = useParams();\n  const data = new Date();\n\n  useEffect(() => {\n    moviesApi.fetchDetails(infoId).then(setWeather);\n  }, [infoId]);\n\n  return (\n    <main>\n      {weather && (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-sm-3\">\n              <h2>{weather.name}</h2>\n\n              <img\n                alt={\"Weather Condition and City\"}\n                src={`HTTPS://openweathermap.org/img/wn/${weather?.weather?.map(\n                  (value) => value.icon\n                )}@2x.png`}\n              />\n              <p>{weather?.weather?.map((value) => value.main)}</p>\n              <p>{weather?.weather?.map((value) => value.description)}</p>\n            </div>\n            <div className=\"col-sm-9\">\n              <div className=\"row\">\n                <div className=\"col-8 col-sm-6\">\n                  <h3>{data.toDateString(weather.dt)}</h3>\n                  <h1>{Math.round(weather?.main?.temp - 273.15)} &#176;C</h1>\n                  <p>\n                    Feels like: {Math.round(weather?.main?.feels_like - 273.15)}{\" \"}\n                    &#176;C\n                  </p>\n                  <span>\n                    min: {Math.round(weather?.main?.temp_min - 273.15)}\n                    &#176;C\n                  </span>\n                  <span>\n                    max: {Math.round(weather?.main?.temp_max - 273.15)}\n                    &#176;C\n                  </span>\n                </div>\n                <div className=\"col-4 col-sm-6\">\n                  {\" \"}\n                  <p>Humidity: {weather.main?.humidity}%</p>\n                  <p>Pressure: {weather.main?.pressure} мм рт. ст.</p>\n                  <p>Wind: {weather?.wind?.speed}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* <div className={s.flex}>\n        <NavLink\n          to={{\n            pathname: `${url}/cast`,\n            state: { from: location },\n          }}\n        >\n          <button type=\"button\" className={s.button}>\n            Casts\n          </button>\n        </NavLink>\n        <br />\n        <NavLink\n          to={{\n            pathname: `${url}/reviews`,\n            state: { from: location },\n          }}\n        >\n          <button type=\"button\" className={s.button}>\n            Reviews\n          </button>\n        </NavLink>\n      </div>\n      <Suspense\n        fallback={\n          <Loader\n            type=\"ThreeDots\"\n            color=\"teal\"\n            height={300}\n            width={300}\n            timeout={3000}\n          />\n        }\n      >\n        <Route path={`${url}/cast`}>\n          {movies && <Casts movieId={movieId} />}\n        </Route>\n        <Route path={`${url}/reviews`}>\n          {movies && <Reviews movieId={movieId} />}\n        </Route>\n      </Suspense> */}\n    </main>\n  );\n}\n","import { Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport { lazy, Suspense } from \"react\";\nimport AppBar from \"./component/AppBar/AppBar\";\nimport Container from \"./component/Container/Container\";\nimport \"./App.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport Loader from \"react-loader-spinner\";\nimport Information from \"./views/Information/Information\";\n\nconst SearchCountry = lazy(() => import(\"./views/Home/Home\"));\n// const Information = lazy(() => import(\"./views/Information/Information\"));\n\nexport default function App() {\n  return (\n    <Container>\n      <BrowserRouter>\n        <AppBar />\n\n        <Suspense\n          fallback={\n            <Loader\n              type=\"ThreeDots\"\n              color=\"teal\"\n              height={300}\n              width={300}\n              timeout={3000}\n            />\n          }\n        >\n          <Switch>\n            <Route path=\"/get_weather\" exact>\n              <SearchCountry />\n            </Route>\n\n            <Route path=\"/Information/:infoId\">\n              <Information />\n            </Route>\n\n            {/* <Route path=\"/Information/:infoId\"></Route> */}\n          </Switch>\n        </Suspense>\n\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </BrowserRouter>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}