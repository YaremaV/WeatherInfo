{"version":3,"sources":["component/Navigation/navigation.module.css","component/Container/container.module.css","component/Navigation/Navigation.js","component/AppBar/AppBar.js","component/Container/Container.js","component/Geolocation/Geolocation.js","App.js","index.js"],"names":["module","exports","Navigation","className","s","navigation","to","exact","navLink","activeClassName","active","AppBar","Container","children","styles","container","Geolocation","useState","lat","setLat","long","setLong","data","setData","error","setError","useEffect","fetchData","a","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","then","res","json","result","console","log","catch","message","main","name","moment","format","alt","src","weather","map","value","icon","Math","round","temp","humidity","Date","sys","sunrise","toLocaleTimeString","sunset","SearchCountry","lazy","Information","App","fallback","type","color","height","width","timeout","path","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6d6119b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"navigation_navigation__1RJOe\",\"navLink\":\"navigation_navLink__3bI8-\",\"active\":\"navigation_active__3aMSb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__187eG\"};","import { NavLink } from \"react-router-dom\";\r\nimport s from \"./navigation.module.css\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav className={s.navigation}>\r\n      <NavLink\r\n        to=\"/get_weather\"\r\n        exact\r\n        className={s.navLink}\r\n        activeClassName={s.active}\r\n      >\r\n        Home\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/Information\"\r\n        className={s.navLink}\r\n        activeClassName={s.active}\r\n      >\r\n        Information\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\n\r\nexport default function AppBar() {\r\n  return <Navigation />;\r\n}\r\n","import styles from \"./container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport \"./geolocation.css\";\n\nconst URL = \"https://api.openweathermap.org/data/2.5\";\nconst KEY = \"2d20223674e609e0aa7b3ad29d181f8b\";\nconst EACT_APP_ICON_URL = \"https://openweathermap.org/img/w\";\n\nexport default function Geolocation() {\n  const [lat, setLat] = useState([]);\n  const [long, setLong] = useState([]);\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setLat(position.coords.latitude);\n        setLong(position.coords.longitude);\n      });\n\n      await fetch(\n        `${URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=${KEY}`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setData(result);\n          console.log(result);\n        })\n        .catch((error) => {\n          setError(error);\n        });\n    };\n    fetchData();\n  }, [lat, long]);\n\n  return (\n    <div>\n      {error && <p>Whoops, something went wrong: {error.message}</p>}\n      {typeof data.main != \"undefined\" ? (\n        <div className=\"main\">\n          <p className=\"header\">{data.name}</p>\n\n          <div className=\"flex\">\n            <p className=\"day\">\n              {moment().format(\"dddd\")}, <span>{moment().format(\"LL\")}</span>\n            </p>\n            <img\n              alt={\"Weather Condition and City\"}\n              src={`http://openweathermap.org/img/wn/${data?.weather?.map(\n                (value) => value.icon\n              )}@2x.png`}\n            />\n            <p className=\"description\">\n              {data.weather?.map((value) => value.main)}\n            </p>\n          </div>\n\n          <div className=\"flex\">\n            <p className=\"temp\">\n              Temperature: {Math.round(data.main?.temp)} &deg;C\n            </p>\n            <p className=\"temp\">Humidity: {data.main?.humidity} %</p>\n          </div>\n\n          <div className=\"flex\">\n            <p className=\"sunrise-sunset\">\n              Sunrise:{\" \"}\n              {new Date(data.sys?.sunrise * 1000).toLocaleTimeString(\"en-IN\")}\n            </p>\n            <p className=\"sunrise-sunset\">\n              Sunset:{\" \"}\n              {new Date(data.sys?.sunset * 1000).toLocaleTimeString(\"en-IN\")}\n            </p>\n          </div>\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n}\n","import { Route, Switch } from \"react-router-dom\";\nimport { lazy, Suspense } from \"react\";\nimport AppBar from \"./component/AppBar/AppBar\";\nimport Container from \"./component/Container/Container\";\nimport \"./App.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport Loader from \"react-loader-spinner\";\nimport Geolocation from \"./component/Geolocation/Geolocation\";\n\nconst SearchCountry = lazy(() => import(\"./views/Home/Home\"));\nconst Information = lazy(() => import(\"./views/Information/Information\"));\n\nexport default function App() {\n  return (\n    <Container>\n      <AppBar />\n      <Suspense\n        fallback={\n          <Loader\n            type=\"ThreeDots\"\n            color=\"teal\"\n            height={300}\n            width={300}\n            timeout={3000}\n          />\n        }\n      >\n        <Switch>\n          <Route path=\"/get_weather\" exact>\n            <SearchCountry />\n          </Route>\n\n          <Route path=\"/Information\" exact>\n            <Geolocation />\n          </Route>\n\n          <Route path=\"/Information/:infoId\">\n            <Information />\n          </Route>\n        </Switch>\n      </Suspense>\n\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </Container>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      {/* <Provider store={store}> */}\n      <App />\n      {/* </Provider> */}\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}