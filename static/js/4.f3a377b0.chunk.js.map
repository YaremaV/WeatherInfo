{"version":3,"sources":["API/weather-api.js","component/FiveDays/FiveDays.js","views/Information/Information.js"],"names":["BASE_URL","KEY","fetchWithErrorHandling","a","url","fetch","response","ok","json","Promise","reject","Error","fetchSearch","cityName","fetchDetails","id","fetchFewDays","lon","lat","FiveDays","useState","days","setDays","date","Date","useEffect","moviesApi","then","res","daily","console","log","className","map","day","idx","toDateString","dt","slice","Math","round","temp","alt","src","weather","value","icon","main","description","humidity","pressure","wind_speed","Information","setWeather","useRouteMatch","infoId","useParams","data","location","useLocation","coord","name","sys","country","feels_like","temp_min","temp_max","wind","speed","sunrise","toLocaleTimeString","sunset","to","pathname","state","from","type","fallback","color","height","width","timeout","path"],"mappings":"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","file":"static/js/4.f3a377b0.chunk.js","sourcesContent":["const BASE_URL = \"HTTPS://api.openweathermap.org/data/2.5/\";\nconst KEY = \"2d20223674e609e0aa7b3ad29d181f8b\";\n\nasync function fetchWithErrorHandling(url = \"\") {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(\"Not found\"));\n}\n\nexport function fetchSearch(cityName) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}weather?q=${cityName}&appid=${KEY}`\n  );\n}\n\nexport function fetchDetails(id) {\n  return fetchWithErrorHandling(`${BASE_URL}weather?id=${id}&appid=${KEY}`);\n}\n\nexport function fetchFewDays(lon, lat) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}onecall?lat=${lat}&lon=${lon}&exclude=hourly&appid=${KEY}`\n  );\n  // https://api.openweathermap.org/data/2.5/onecall?lat=33.44&lon=-94.04&exclude=hourly,daily&appid={API key}\n}\n","import { useState, useEffect } from \"react\";\nimport * as moviesApi from \"../../API/weather-api\";\nimport \"./fewdays.css\";\n\nexport default function FiveDays({ lon, lat }) {\n  const [days, setDays] = useState([]);\n  const date = new Date();\n\n  useEffect(() => {\n    moviesApi.fetchFewDays(lon, lat).then((res) => setDays(res.daily));\n  }, [lat, lon]);\n  return (\n    <>\n      {console.log(days)}\n      <ul className=\"flex_line\">\n        {days &&\n          days?.map((day, idx) => (\n            <li key={idx} className=\"list\">\n              <h3>{date.toDateString(day.dt)?.slice(0, 10)}</h3>\n              <h1>{Math.round(day?.temp?.day - 273.15)} &#176;C</h1>\n              <img\n                alt={\"Weather Condition and City\"}\n                src={`HTTPS://openweathermap.org/img/wn/${day?.weather?.map(\n                  (value) => value.icon\n                )}@2x.png`}\n              />\n              <p>{day?.weather?.map((value) => value.main)}</p>\n              <p>{day?.weather?.map((value) => value.description)}</p>\n              <p>Humidity: {day.humidity} %</p>\n              <p>Pressure: {day.pressure} mb</p>\n              <p>Wind: {day?.wind_speed} km/h</p>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport {\n  useParams,\n  Route,\n  useRouteMatch,\n  useHistory,\n  useLocation,\n} from \"react-router\";\nimport { NavLink } from \"react-router-dom\";\nimport { lazy, Suspense } from \"react\";\nimport * as moviesApi from \"../../API/weather-api\";\nimport FiveDays from \"../../component/FiveDays/FiveDays\";\nimport Loader from \"react-loader-spinner\";\nimport \"./information.css\";\n\nexport default function Information() {\n  const [weather, setWeather] = useState([]);\n  const { url } = useRouteMatch();\n  const { infoId } = useParams();\n  const data = new Date();\n  const location = useLocation();\n\n  useEffect(() => {\n    moviesApi.fetchDetails(infoId).then(setWeather);\n  }, [infoId]);\n\n  return (\n    <main>\n      {console.log(weather?.coord?.lon)}\n      {console.log(weather?.coord?.lat)}\n      {weather && (\n        <div className=\"cards__thumb \">\n          <div className=\"line__flex\">\n            <div>\n              <h3>{data.toDateString(weather.dt)?.slice(0, 10)}</h3>\n              <h2>\n                {weather.name}\n                <sup className=\"sup\">{weather?.sys?.country}</sup>\n              </h2>\n              <h1>{Math.round(weather?.main?.temp - 273.15)}&#176;C</h1>\n            </div>\n            <div className=\"row__flex\">\n              <p>{weather?.weather?.map((value) => value.main)}</p>\n              <img\n                alt={\"Weather Condition and City\"}\n                src={`HTTPS://openweathermap.org/img/wn/${weather?.weather?.map(\n                  (value) => value.icon\n                )}@2x.png`}\n              />\n            </div>\n          </div>\n\n          <div className=\"row__flex\">\n            <ul>\n              <li>\n                <p>\n                  Feels like: {Math.round(weather?.main?.feels_like - 273.15)}\n                  &#176;C\n                </p>\n              </li>\n              <li>\n                <p>\n                  min: {Math.round(weather?.main?.temp_min - 273.15)}\n                  &#176;C\n                </p>\n              </li>\n              <li>\n                <p>\n                  max: {Math.round(weather?.main?.temp_max - 273.15)}\n                  &#176;C\n                </p>\n              </li>\n            </ul>\n          </div>\n          <div className=\"row__flex\">\n            <p>Humidity: {weather.main?.humidity} %</p>\n            <p>Pressure: {weather.main?.pressure} mb</p>\n            <p>Wind: {weather?.wind?.speed} km/h</p>\n          </div>\n          <div>\n            <p className=\"sunrise-sunset\">\n              Sunrise:{\" \"}\n              {new Date(weather.sys?.sunrise * 1000).toLocaleTimeString(\n                \"en-IN\"\n              )}\n            </p>\n            <p className=\"sunrise-sunset\">\n              Sunset:{\" \"}\n              {new Date(weather.sys?.sunset * 1000).toLocaleTimeString(\"en-IN\")}\n            </p>\n          </div>\n        </div>\n      )}\n\n      <div>\n        <NavLink\n          to={{\n            pathname: `${url}/FiveDays`,\n            state: { from: location },\n          }}\n        >\n          <button type=\"button\">Load More</button>\n        </NavLink>\n        <br />\n      </div>\n      <Suspense\n        fallback={\n          <Loader\n            type=\"ThreeDots\"\n            color=\"teal\"\n            height={300}\n            width={300}\n            timeout={3000}\n          />\n        }\n      >\n        <Route path={`${url}/FiveDays`}>\n          {weather && (\n            <FiveDays lon={weather?.coord?.lon} lat={weather?.coord?.lat} />\n          )}\n        </Route>\n      </Suspense>\n    </main>\n  );\n}\n"],"sourceRoot":""}