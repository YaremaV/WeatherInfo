{"version":3,"sources":["API/weather-api.js","component/Searchbar/Searchbar.module.css","component/Searchbar/Searchbar.js","component/WeatherContainer/WeatherContainer.js","component/WeatherList/WeatherList.js","views/Home/Home.js"],"names":["BASE_URL","KEY","fetchWithErrorHandling","a","url","fetch","response","ok","json","Promise","reject","Error","fetchSearch","cityName","fetchDetails","id","module","exports","Searchbar","onSubmit","location","useLocation","useState","image","setImage","useEffect","queryValue","URLSearchParams","search","get","className","s","SearchForm","evt","preventDefault","trim","toast","error","position","theme","SearchFormInput","type","autoComplete","autoFocus","placeholder","value","onChange","EventTarget","currentTarget","toLowerCase","SearchFormButton","SearchFormButtonLabel","propType","PropTypes","string","func","WeatherContainer","weatherContainer","onClick","icon","weather","map","descr","description","to","Math","round","main","temp","name","alt","src","attribute","WeatherList","onDeleteContacts","upDate","SearchCountry","countries","setCountries","searchCountries","setSearchCountries","JSON","parse","window","localStorage","getItem","list","setList","setError","moviesApi","then","res","catch","setItem","stringify","filtered","Array","from","Set","message","newEl","console","log","contactId","filter"],"mappings":"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","file":"static/js/3.93204e7b.chunk.js","sourcesContent":["const BASE_URL = \"HTTPS://api.openweathermap.org/data/2.5/\";\r\nconst KEY = \"2d20223674e609e0aa7b3ad29d181f8b\";\r\n\r\nasync function fetchWithErrorHandling(url = \"\") {\r\n  const response = await fetch(url);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(\"Not found\"));\r\n}\r\n\r\nexport function fetchSearch(cityName) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}weather?q=${cityName}&appid=${KEY}`\r\n  );\r\n}\r\n\r\nexport function fetchDetails(id) {\r\n  return fetchWithErrorHandling(`${BASE_URL}weather?id=${id}&appid=${KEY}`);\r\n}\r\n\r\nexport function fetchFewDays(id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}forecast/daily?id=${id}&appid=${KEY}`\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"Searchbar_SearchForm__VYuWE\",\"SearchFormButton\":\"Searchbar_SearchFormButton__stK-r\",\"SearchForm-button\":\"Searchbar_SearchForm-button__1adC4\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2BoPo\",\"SearchFormInput\":\"Searchbar_SearchFormInput__22ues\",\"SearchForm-input\":\"Searchbar_SearchForm-input__Fuwc7\"};","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Searchbar.module.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const location = useLocation();\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const queryValue = new URLSearchParams(location.search).get(\"image\");\r\n\r\n    if (queryValue === null) {\r\n      return;\r\n    }\r\n\r\n    setImage(queryValue);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleImageChange = (EventTarget) => {\r\n    setImage(EventTarget.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    if (image.trim() === \"\") {\r\n      toast.error(\"Please Enter countries to get weather!\", {\r\n        position: \"top-left\",\r\n        theme: \"colored\",\r\n      });\r\n      return;\r\n    }\r\n    onSubmit(image);\r\n    setImage(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n        <input\r\n          className={s.SearchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Get weather in your countries\"\r\n          value={image}\r\n          onChange={handleImageChange}\r\n        />\r\n        <button type=\"submit\" className={s.SearchFormButton}>\r\n          <span className={s.SearchFormButtonLabel}>Search</span>\r\n        </button>\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propType = {\r\n  value: PropTypes.string,\r\n  onSubmit: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n};\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./weather.css\";\n\nexport default function WeatherContainer({ weatherContainer, onClick }) {\n  const icon = weatherContainer?.weather?.map((value) => value.icon);\n  const descr = weatherContainer?.weather?.map((value) => value.description);\n  return (\n    <ul className=\"row \">\n      <li key={weatherContainer.id} className=\"container-medium centered_cont\">\n        <Link to={`/Information/${weatherContainer.id}`}>\n          <div className=\"wraper\">\n            <div>\n              <h2>\n                {Math.round(weatherContainer?.main?.temp - 273.15)} &#176;C\n              </h2>\n              <h3>{weatherContainer.name} </h3>\n            </div>\n            <div className=\"fav-info\">\n              <img\n                className=\"image\"\n                alt={\"Weather Condition and City\"}\n                src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\n              />\n              <p>{descr}</p>\n            </div>\n          </div>\n        </Link>\n        <button\n          attribute={true}\n          onClick={() => onClick(weatherContainer)}\n          className=\"btn\"\n          type=\"button\"\n        >\n          Add\n        </button>\n      </li>\n    </ul>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./WeatherList.css\";\n\nexport default function WeatherList({ weather, onDeleteContacts, upDate }) {\n  return (\n    <ul className=\"gallery__wrapper\">\n      {weather.map((value) => (\n        <li\n          key={value.id}\n          className=\"gallery__list container-medium centered_cont\"\n        >\n          <Link to={`/Information/${value.id}`}>\n            <div className=\"wraper\">\n              <div>\n                <h2>{Math.round(value?.main?.temp - 273.15)} &#176;C</h2>\n                <h3>{value.name} </h3>\n              </div>\n              <div className=\"fav-info\">\n                <img\n                  className=\"image\"\n                  alt={\"Weather Condition and City\"}\n                  src={`http://openweathermap.org/img/wn/${value?.weather?.map(\n                    (value) => value.icon\n                  )}@2x.png`}\n                />\n                <p>{value?.weather?.map((value) => value.description)}</p>\n              </div>\n            </div>\n          </Link>\n\n          <button\n            className=\"btn\"\n            attribute={true}\n            type=\"button\"\n            onClick={() => onDeleteContacts(value.id)}\n          >\n            Delete\n          </button>\n          <button\n            className=\"update\"\n            attribute={true}\n            type=\"button\"\n            onClick={upDate}\n          >\n            UpDate\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport * as moviesApi from \"../../API/weather-api\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport SearchBar from \"../../component/Searchbar/Searchbar\";\nimport WeatherContainer from \"../../component/WeatherContainer/WeatherContainer\";\nimport WeatherList from \"../../component/WeatherList/WeatherList\";\n\nexport default function SearchCountry() {\n  const [countries, setCountries] = useState(\"\");\n  const [searchCountries, setSearchCountries] = useState([]);\n  const [list, setList] = useState(\n    () => JSON.parse(window.localStorage.getItem(\"list\")) ?? []\n  );\n  const [filter, setFilter] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (countries === \"\") {\n      return;\n    }\n\n    moviesApi\n      .fetchSearch(countries)\n      .then((res) => setSearchCountries(res))\n      .catch((error) => {\n        setError(error);\n      });\n  }, [countries]);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"list\", JSON.stringify(list));\n  }, [list]);\n\n  const handleSubmit = (value) => {\n    setCountries(value);\n  };\n\n  const deleteCard = (contactId) => {\n    setList((list) => list.filter((value) => value.id !== contactId));\n  };\n\n  const addCard = (newEl) => {\n    setList([newEl, ...list]);\n    console.log(list);\n  };\n\n  const onUpdate = () => {\n    moviesApi\n      .fetchSearch(countries)\n      .then((res) => setSearchCountries(res))\n      .catch((error) => {\n        setError(error);\n      });\n  };\n  const filtered = Array.from(new Set(list));\n  return (\n    <>\n      <SearchBar onSubmit={handleSubmit} />\n      {error && <p>Whoops, something went wrong: {error.message}</p>}\n      {typeof searchCountries.main != \"undefined\" ? (\n        <WeatherContainer\n          weatherContainer={searchCountries}\n          onClick={addCard}\n        />\n      ) : (\n        <div></div>\n      )}\n\n      {typeof searchCountries.main != \"undefined\" ? (\n        <WeatherList\n          weather={filtered}\n          onDeleteContacts={deleteCard}\n          upDate={onUpdate}\n        />\n      ) : (\n        <div></div>\n      )}\n    </>\n  );\n}\n\n// const mapStateToProps = (state, ownProps) => {\n//   return {\n//     searchCountries: state.searchCountries,\n//   };\n// };\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     createCard: (searchCountries) =>\n//       dispatch(action.createCard(searchCountries)),\n//     deleteCard: (index) => dispatch(action.deleteCard(index)),\n//   };\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(SearchCountry);\n"],"sourceRoot":""}